name: Deploy Streamlit to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
      id-token: write
      contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Create and start virtual environment
        run: |
          python -m venv antenv
          source antenv/bin/activate
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: python-app
    
    - name: Unzip artifact for deployment
      run: unzip release.zip
   
    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Set Web App Settings
      run: |
        az webapp config appsettings set -g ${{ vars.AZURE_RESOURCE_GROUP }} -n ${{ vars.AZURE_WEBAPP_NAME }} \
          --settings CHAT_API_ENDPOINT='${{ secrets.CHAT_API_ENDPOINT }}'

    - name: Deploy web App using GH Action azure/webapps-deploy
      uses: azure/webapps-deploy@v3
      id: deploy-to-webapp
      with:
        app-name: ${{ vars.AZURE_WEBAPP_NAME }}
        package: '.'
        slot-name: 'Production'
        startup-command: 'python -m streamlit run streamlit_app.py --server.port 8000 --server.address 0.0.0.0'
    
    - name: Azure Logout
      run: |
        az logout